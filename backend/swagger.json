{
  "swagger": "2.0",
  "info": {
    "description": "Cloudflare CMS is a content management system that utilises Cloudflare Products (Workers, KV, and Pages) to provide a familiar environment to use Cloudflare Products. This Swagger UI page allows you to access your Cloudflare KV and use it like any other database. 'Values' are like tables, 'Keys' are like databases with a collection of tables, and 'Namespaces' are like a collection of databases. This Swagger page can be used to access Cloudflare KV belonging to any person, as long as you have the API token with KV permissions.\n\nImportant Notes:\n* Authorize with your API token (Enter `Bearer <YOUR_API_KEY>` in the Authorize prompt)\n* `accountId` can be found on the right side of your account's workers overview page \n* `namespaceId` can be found in your account's worker KV page\n* `keyName` is the name of the key in your namespace\n* `itemId` is the ID of an object in the array of values of the key\n",
    "version": "1.0.0",
    "title": "Cloudflare CMS API"
  },
  "host": "cloudflare-cms-api.kevc.workers.dev",
  "basePath": "/",
  "tags": [
    {
      "name": "namespaces"
    },
    {
      "name": "keys"
    },
    {
      "name": "values"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/{accountId}": {
      "get": {
        "tags": [
          "namespaces"
        ],
        "summary": "Get all namespaces",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "tags": [
          "namespaces"
        ],
        "summary": "Create new namespace",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "payload",
            "description": "New namespace details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Namespace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/{accountId}/{namespaceId}": {
      "put": {
        "tags": [
          "namespaces"
        ],
        "summary": "Update namespace",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceId",
            "in": "path",
            "description": "ID of namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "payload",
            "description": "Namespace update details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Namespace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "namespaces"
        ],
        "summary": "Delete namespaces",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceId",
            "in": "path",
            "description": "ID of namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/{accountId}/{namespaceId}/keys": {
      "get": {
        "tags": [
          "keys"
        ],
        "summary": "Get all keys",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceId",
            "in": "path",
            "description": "ID of namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "tags": [
          "keys"
        ],
        "summary": "Create new key",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceId",
            "in": "path",
            "description": "ID of namespace",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "payload",
            "description": "New key details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/{accountId}/{namespaceId}/{keyName}": {
      "get": {
        "tags": [
          "values"
        ],
        "summary": "Get all values in key",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceId",
            "in": "path",
            "description": "ID of namespace",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyName",
            "in": "path",
            "description": "Name of key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "tags": [
          "values"
        ],
        "summary": "Add item to values",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceId",
            "in": "path",
            "description": "ID of namespace",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyName",
            "in": "path",
            "description": "Name of key",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "payload",
            "description": "New item details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Value"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/{accountId}/{namespaceId}/{keyName}/{itemId}": {
      "get": {
        "tags": [
          "values"
        ],
        "summary": "Get single item in values",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceId",
            "in": "path",
            "description": "ID of namespace",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyName",
            "in": "path",
            "description": "Name of key",
            "required": true,
            "type": "string"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "ID of item",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "put": {
        "tags": [
          "values"
        ],
        "summary": "Update single item in values",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceId",
            "in": "path",
            "description": "ID of namespace",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyName",
            "in": "path",
            "description": "Name of key",
            "required": true,
            "type": "string"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "ID of item",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "payload",
            "description": "Value update details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Value"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "values"
        ],
        "summary": "Delete single item in values",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceId",
            "in": "path",
            "description": "ID of namespace",
            "required": true,
            "type": "string"
          },
          {
            "name": "keyName",
            "in": "path",
            "description": "Name of key",
            "required": true,
            "type": "string"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "ID of item",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Bearer token (Cloudflare Token with KV permissions)"
    }
  },
  "definitions": {
    "Namespace": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Namespace"
      }
    },
    "Key": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Key"
      }
    },
    "Value": {
      "type": "object",
      "xml": {
        "name": "Value"
      }
    }
  }
}